import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import axios from 'axios';

const Vehicles = () => {
    const [resident, setResident] = useState([]);
    const [vehicles, setVehicles] = useState([]);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState(null);
    const [formData, setFormData] = useState({
        vehicle_type: '',
        license_plate: '',
        resident: null, // Will hold the resident ID
    });
    const navigate = useNavigate();

    useEffect(() => {
        const fetchUser = async () => {
            try {
                const token = localStorage.getItem('access_token');
                if (!token) {
                    throw new Error('No access token found');
                }

                const response = await axios.get('http://localhost:8000/api/getUser', {
                    headers: {
                        'Authorization': `Bearer ${token}`,
                    }
                });
                setResident(response.data); // Assuming response.data contains the resident object
                setFormData({
                    ...formData,
                    resident: response.data.id, // Update formData with resident ID
                });
            } catch (err) {
                setError(err.message);
            }
        };

        fetchUser();
    }, []);

    useEffect(() => {
        const fetchVehicles = async () => {
            try {
                const token = localStorage.getItem('access_token');
                if (!token) {
                    throw new Error('No access token found');
                }
                const response = await axios.get('http://localhost:8000/api/viewVehicles/', {
                    headers: { Authorization: `Bearer ${token}` }
                });
                setVehicles(response.data);
            } catch (error) {
                setError('Failed to fetch vehicles.');
            } finally {
                setLoading(false);  // Stop loading after fetch
            }
        };

        fetchVehicles();
    }, [resident]);

    const handleChange = (e) => {
        const { name, value } = e.target;
        setFormData({
            ...formData,
            [name]: value
        });
    };

    const handleAddVehicle = async (e) => {
        e.preventDefault();
        try {
            const token = localStorage.getItem('access_token');
            if (!token) {
                throw new Error('No access token found');
            }

            // Make the POST request to add a vehicle
            const response = await axios.post('http://localhost:8000/api/addVehicle/', {
                ...formData,
                resident: resident ? resident.id : null, // Pass the resident ID
                house_no: resident ? resident.house_number : '' // Pass the house number
            }, {
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${token}`,
                }
            });

            console.log('Vehicle added:', response.data);
            alert('Vehicle added succesfull')
            // navigate('/vehicles'); // Redirect to vehicles page after adding

        } catch (error) {
            console.error('There was an error adding the vehicle:', error);
            alert('Failed to add vehicle. Please check your details and try again.');
        }
    };

    const handleRemoveVehicle = async (id) => {
        try {
            const token = localStorage.getItem('access_token');
            if (!token) {
                throw new Error('No access token found');
            }
            await axios.delete(`http://localhost:8000/api/removeVehicle/${id}/`, {
                headers: { Authorization: `Bearer ${token}` }
            });
            alert('Vehicle removed successfull')
            setVehicles(vehicles.filter(vehicle => vehicle.id !== id));
            setSuccess('Vehicle removed successfully!');
        } catch (error) {
            setError('Failed to remove vehicle.');
        }
    };

    // const handleAddVehicle = () => {
    //     navigate('/addVehicle');
    // };

    // const handleRemoveVehicle = () => {
    //     navigate('/removeVehicle');
    // };

    // const handleViewVehicles = () => {
    //     navigate('/viewVehicle');
    // };

    // const handleBackToHome = () => {
    //     navigate('/home');
    // };

    if (loading) {
        return <p>Loading...</p>; 
    }

    return (
        <div>
            <h2>Vehicles Management</h2>
            {error && <p>Error: {error}</p>}
            <h2>Vehicles in Your Apartment</h2>
            {vehicles.length === 0 ? (
                <p>No vehicles in your apartment</p>  // Message when no vehicles found
            ) : (
                <ul>
                    {vehicles.map(vehicle => (
                        <li key={vehicle.id}>
                            {vehicle.vehicle_type} - {vehicle.license_plate}
                        </li>
                    ))}
                </ul>
            )}
            {/* <button onClick={backPage}>Back</button> */}
            <button onClick={handleAddVehicle}>Add Vehicle</button>
            <button onClick={handleRemoveVehicle}>Remove Vehicle</button>
            {/* <button onClick={handleViewVehicles}>View Vehicle</button> */}
            {/* <button onClick={handleBackToHome}>Back to Home</button> */}
        </div>
    );
};

export default Vehicles;
